This dataset is called 'chinook'. I am using SQLite

--Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to")

SELECT firstname, lastname, customerid, country
  FROM chinook.customers
  WHERE country <> 'USA';
  
--Show only the Customers from Brazil.

SELECT firstname, lastname, country
  FROM chinook.customers
  WHERE country = 'Brazil';
  
--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, 
and billing country.

SELECT c.firstname||' '|| c.lastname AS fullname, i.invoiceid, i.billingcountry
  FROM chinook.customers c
  JOIN chinook.invoices i
  ON c.customerid = i.customerid
  WHERE c.country = 'Brazil';

--Show the Employees who are Sales Agents.
SELECT *
  FROM chinook.employees
  WHERE title LIKE 'Sales%'
  AND title LIKE '%Agent';
 
--Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT (Billingcountry)
  FROM chinook.invoices
  
--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name. Round to two 
decimal places.

SELECT e.firstname||' '|| e.lastname AS fullname, ROUND(sum(i.total),2) AS total
FROM chinook.customers c
JOIN chinook.employees e
ON c.supportrepid = e.employeeid
JOIN chinook.invoices i
ON c.customerid = i.customerid
GROUP BY e.employeeid;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT e.firstname||' '|| e.lastname AS Employeename, c.firstname||' '|| c.lastname AS CustomerName, sum(i.total) AS InvoiceTotal
  FROM chinook.customers c
  JOIN chinook.employees e
  ON c.supportrepid = e.employeeid
  JOIN chinook.invoices i
  ON c.customerid = i.customerid
  GROUP BY c.customerid;

--How many Invoices were there in 2009?

SELECT COUNT (*)
  FROM chinook.invoices
  WHERE strftime('%Y',InvoiceDate) = '2009';
  
--What are the total sales for 2009? Round to two decimal places.

SELECT ROUND(sum(total),2)
  FROM chinook.invoices
  WHERE strftime('%Y',invoiceDate) = '2009';
  
--Write a query that includes the purchased track name with each invoice line ID.

SELECT t.name, it.invoicelineid
  FROM chinook.tracks t
  JOIN chinook.invoice_items it
  ON it.trackid = t.trackid;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.BIT_DB

SELECT item.invoicelineid, track.name AS TrackName, artists.name AS ArtistName
  FROM chinook.invoice_items item
  JOIN chinook.tracks track
  ON item.trackid = track.trackid
  JOIN chinook.albums albums
  ON track.albumid = albums.albumid
  JOIN chinook.artists artists
  ON albums.artistid = artists.artistid;
  
--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.name AS TrackName, albums.title AS AlbumTitle, media.name AS MediaType, genres.name AS Genres
  FROM chinook.tracks tracks
  JOIN chinook.albums albums
  ON tracks.albumid = albums.albumid
  JOIN chinook.media_types media
  ON media.mediatypeid = tracks.mediatypeid
  JOIN chinook.genres genres
  ON genres.genreid = tracks.genreid;
  
--Show the total sales made by each sales agent.

SELECT e.firstname||' '|| e.lastname AS fullname, ROUND(sum(items.quantity*items.unitprice),2) AS TotalSales
  FROM chinook.invoice_items items
  JOIN chinook.invoices i
  ON items.invoiceid = i.invoiceid
  JOIN chinook.customers c
  ON i.customerid = c.customerid
  JOIN chinook.employees e 
  ON e.employeeid = c.supportrepid
  GROUP BY e.employeeid;
  
--Show the total sales made by each sales agent.

SELECT e.firstname||' '|| e.lastname AS fullname, ROUND(sum(items.quantity*items.unitprice),2) AS TotalSales
  FROM chinook.invoice_items items
  JOIN chinook.invoices i
  ON items.invoiceid = i.invoiceid
  JOIN chinook.customers c
  ON i.customerid = c.customerid
  JOIN chinook.employees e 
  ON e.employeeid = c.supportrepid
  WHERE strftime('%Y',invoiceDate) = '2009'
  GROUP BY e.employeeid;
  


1. Which customers have spent the most money at the store?
2. What are the top 10 most purchased tracks in the database?
3. What is the average length of a track in the database?
4. Which genre has the most tracks in the database?
5. What is the total revenue generated by the store?
6. Which artist has the most tracks in the database?
7. What is the most popular album in the database?
8. Which customer has the highest number of purchases?
9. What is the most common billing country in the database?
10. Which employee has the highest number of sales?
 
  

 
 
